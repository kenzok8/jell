--- my-dnshelper/files/usr/share/my-dnshelper/comm
+++ my-dnshelper/files/usr/share/my-dnshelper/comm
@@ -158,55 +158,38 @@ clean_wfiles(){
 	[ -f $helperconf ] && rm -f $helperconf
 }
 
-extract_rules(){
-		echo "*$1"
-		iptables-save -t $1 | grep MY_DNSHELPER |
-			sed -e "s/^-A \(OUTPUT\|FORWARD\)/-I \1 1/"
-		echo 'COMMIT'
-}
-
-init_fwi(){
-	echo '#!/bin/sh' > $FWI
-}
-
-get_include(){
-	init_fwi
-
-	cat <<-EOF >> $FWI
-	iptables-save -c | grep -v MY_DNSHELPER | iptables-restore -c
-	iptables-restore -n <<-EOT
-	$(extract_rules filter)
-	EOT
-EOF
-}
-
 clear_iprule(){
-	sleep 1s
-	iptables -w 2 -D FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
-	iptables -w 2 -D OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
-	which ipset >/dev/null && ipset destroy myipdrop 2>/dev/null
-	rm -f $bgsconf
-	init_fwi
+	if [ -n "$(command -v nft)" ]; then
+		fw4 reload
+		nft flush set inet fw4 myipdrop 2>/dev/null
+		nft delete set inet fw4 myipdrop 2>/dev/null
+	else
+		iptables -w 2 -D FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
+		iptables -w 2 -D OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP 2>/dev/null
+		which ipset >/dev/null && ipset destroy myipdrop 2>/dev/null
+	fi
 }
 
 add_iprule(){
-	local ipstok=1
 	local i=""
 	[ -d $SPath ] || mkdir -p $SPath
-	echo -n > $bgsconf
-	which ipset >/dev/null || ipstok=0
-	[ $ipstok -eq 1 ] && ipset create myipdrop hash:net 2>/dev/null
-	for j in $(cat $EPath/ip.mdhp);do
-		i=`echo $j| grep -oE "[0-9a-fA-F\:]*([0-9]+(\.[0-9]+){3})?"`
-		[ -n "$i" ] || continue
-		[ $ipstok -eq 1 ] && ipset -! add myipdrop $i;
-		if [ $(echo $i | grep -c "/") -eq 0 ]; then
-			echo "bogus-nxdomain=$i" >> $bgsconf
+	if [ -n "$(command -v nft)" ]; then
+		nft add set inet fw4 myipdrop { type ipv4_addr \; flags interval \; }
+		for i in $(cat $EPath/ip.mdhp | tr -s '\n' | grep -v "^#" | grep -E "(\.((2(5[0-5]|[0-4][0-9]))|[0-1]?[0-9]{1,2})){3}");do
+			[ -n "$i" ] && nft add element inet fw4 myipdrop { $i };
+		done
+		nft add rule inet fw4 output ip saddr @myipdrop drop
+		nft add rule inet fw4 forward ip saddr @myipdrop drop
+	else
+		if [ -n "$(command -v ipset)" ]; then
+			ipset create myipdrop hash:net 2>/dev/null
+			for i in $(cat $EPath/ip.mdhp | tr -s '\n' | grep -v "^#" | grep -E "(\.((2(5[0-5]|[0-4][0-9]))|[0-1]?[0-9]{1,2})){3}");do
+				[ -n "$i" ] && ipset -! add myipdrop $i;
+			done
+			iptables -w -I FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
+			iptables -w -I OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
 		fi
-	done
-	iptables -w -I FORWARD -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
-	iptables -w -I OUTPUT -m set --match-set myipdrop dst -m comment --comment "$TAG" -j DROP
-	get_include
+	fi
 }
 
 ping_1p(){
