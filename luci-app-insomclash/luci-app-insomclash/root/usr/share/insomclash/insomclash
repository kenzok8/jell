#!/bin/bash

# - Copyright 2024
# - bobbyunknown <https://github.com/bobbyunknown>
#
# https://opensource.org/license/mit
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

firewall="/etc/init.d/firewall"
insomclash_dir="/etc/insomclash"
insomclash_tmp_dir="/tmp/insomclash"
insomclash_bin="/usr/bin/mihomo"

config_select=$(uci -q get insomclash.config.config_select)
if [ -z "$config_select" ]; then
    config_select="config.yaml"
fi
insomclash_config="$insomclash_dir/config/$config_select"

tunnel_mode=$(uci -q get insomclash.config.tunnel_mode)
if [ "$tunnel_mode" == "tproxy" ]; then
    rules_bin="/usr/share/insomclash/routing-tproxy"
else
    rules_bin="/usr/share/insomclash/routing-tun"
fi

mkdir -p $insomclash_tmp_dir

core_log="$insomclash_tmp_dir/core.log"
insomclash_pid_path="$insomclash_tmp_dir/insomclash.pid"
log="$insomclash_tmp_dir/insomclash.log"

logs() {
    echo "[ $(date +%T) ] $1"
    if [ -z $2 ]; then
        echo "[ $(date +%T) ] $1" >> $log
    elif [ $2 -eq 2 ]; then
        echo "[ $(date +%T) ] $1" > $log
    elif [ $2 -eq 3 ]; then
        echo "[ $(date +%T) ] $1" >> $log
        exit 1
    fi
}

clear_all_logs() {
    logs "- Clearing core.log and insomclash.log"
    > "$core_log"
    > "$log"
}

insomclash_start(){
    logs "Running insomclash_start..."

    clear_all_logs

    if [ -f "$insomclash_config" ]; then
        if [ "$tunnel_mode" == "tun" ]; then
            logs "- Setting tun.enable = true for TUN mode"
            yq eval '.tun.enable = true' -i "$insomclash_config"
        else
            logs "- Setting tun.enable = false for TPROXY mode"
            yq eval '.tun.enable = false' -i "$insomclash_config"
        fi
    fi

    logs "- Killing any existing mihomo processes for clean start."
    killall mihomo 2>/dev/null || true

    rm -f $insomclash_pid_path

    logs "- Stopping any existing insomclash log monitor processes."
    killall log_job 2>/dev/null || true

    logs "- Starting insomclash log monitor in background."
    nohup /usr/share/insomclash/log_job &

    logs "- Restarting Firewall."
    $firewall restart || logs "- Failed to restart firewall."

    logs "- Starting Routing Rules: Okay"
    $rules_bin start >> "$log" 2>&1 || logs "- Failed to start routing rules."

    if [ -f "$insomclash_bin" ] ; then
        logs "- Executing Mihomo in foreground. PID will be managed by Procd."
        exec "$insomclash_bin" -d "$insomclash_dir" -f "$insomclash_config" >> "$core_log" 2>&1
    else
        logs "- Core Mihomo binary not detected at: $insomclash_bin"
        exit 1
    fi
}

insomclash_stop(){
    logs "Running insomclash_stop..."
    
    logs "- Stopping Routing Rules: Okay"
    $rules_bin stop >> "$log" 2>&1 || logs "- Failed to stop routing rules."

    logs "- Killing mihomo process."
    killall mihomo 2>/dev/null || true

    logs "- Stopping insomclash log monitor process."
    killall log_job 2>/dev/null || true

    logs "- Restarting Firewall."
    $firewall restart || logs "- Failed to restart firewall."

    rm -f $insomclash_pid_path

    logs "Insomclash has stopped."
    echo "insomclash Disabled." > "$core_log"
}

insomclash_restart(){
    logs "Restarting insomclash" 2
    insomclash_start
    logs "Restarting insomclash - Done"
}

case "$1" in
    start)
        insomclash_start
        ;;
    stop)
        insomclash_stop
        ;;
    restart)
        insomclash_restart
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"
        echo "  start   : Starts the Mihomo proxy and applies routing rules."
        echo "  stop    : Stops the Mihomo proxy and removes routing rules."
        echo "  restart : Restarts the Mihomo proxy and reapplies routing rules."
        ;;
esac

